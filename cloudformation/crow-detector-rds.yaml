AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
    Description: Environment name (dev or prod)
    Default: dev
    AllowedValues:
      - dev
      - prod
  
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC where the resources will be deployed.

Conditions:
  IsDev: !Equals [!Ref Environment, 'dev']

Resources:
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'crow-detector-db-sg-${Environment}'
      GroupDescription: !Sub 'Enable access to Postgres on port 5432 for ${Environment} environment'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !If 
            - IsDev
            - 191.96.37.20/32
            - 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !If 
            - IsDev
            - 129.95.236.75/32
            - 0.0.0.0/0

  PostgresDB:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub 'crow-detector-db-${Environment}'
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: postgres
      EngineVersion: "17.5"
      MasterUsername: !Sub '{{resolve:secretsmanager:crow-detector-db-${Environment}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:crow-detector-db-${Environment}:SecretString:password}}'
      DBName: !Sub 'crow_detector_db_${Environment}'
      PubliclyAccessible: !If [IsDev, true, false]
      StorageType: gp2
      BackupRetentionPeriod: !If [IsDev, 1, 7]
      MultiAZ: !If [IsDev, false, true]
      StorageEncrypted: !If [IsDev, false, true]
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup

Outputs:
  DatabaseEndpoint:
    Description: The endpoint of the RDS database
    Value: !GetAtt PostgresDB.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseEndpoint'
  
  DatabasePort:
    Description: The port of the RDS database
    Value: !GetAtt PostgresDB.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-DatabasePort'
  
  DatabaseName:
    Description: The name of the RDS database
    Value: !Sub 'crow_detector_db_${Environment}'
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseName'
  
  SecurityGroupId:
    Description: The ID of the database security group
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupId'
