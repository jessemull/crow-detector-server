AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
    Description: Environment name (dev or prod)
    Default: dev
    AllowedValues:
      - dev
      - prod

Conditions:
  IsDev: !Equals [!Ref Environment, 'dev']

Resources:
  PostgresDB:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub 'crow-detector-db-${Environment}'
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: postgres
      EngineVersion: "17.5"
      MasterUsername: !Sub '{{resolve:secretsmanager:crow-detector-db-${Environment}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:crow-detector-db-${Environment}:SecretString:password}}'
      DBName: !Sub 'crow_detector_db_${Environment}'
      PubliclyAccessible: !If [IsDev, true, false]
      StorageType: gp2
      BackupRetentionPeriod: !If [IsDev, 1, 7]
      MultiAZ: !If [IsDev, false, true]
      StorageEncrypted: !If [IsDev, false, true]
      VPCSecurityGroups:
        - !If 
          - IsDev
          - !ImportValue crow-detector-db-sg-dev
          - !ImportValue crow-detector-db-sg-prod

Outputs:
  DatabaseEndpoint:
    Description: The endpoint of the RDS database
    Value: !GetAtt PostgresDB.Endpoint.Address
    Export:
      Name: !Sub 'crow-detector-rds-${Environment}-DatabaseEndpoint'
  
  DatabasePort:
    Description: The port of the RDS database
    Value: !GetAtt PostgresDB.Endpoint.Port
    Export:
      Name: !Sub 'crow-detector-rds-${Environment}-DatabasePort'
  
  DatabaseName:
    Description: The name of the RDS database
    Value: !Sub 'crow_detector_db_${Environment}'
    Export:
      Name: !Sub 'crow-detector-rds-${Environment}-DatabaseName'
