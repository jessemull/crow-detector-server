AWSTemplateFormatVersion: '2010-09-09'
Description: 'Application Load Balancer for Crow Detector API'

Parameters:
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: ['dev', 'prod']
  
  # VPC ID is imported from aws-infra VPC
  
  CertificateArn:
    Type: String
    Description: ARN of the SSL certificate from ACM for the domain

Resources:
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub 'crow-detector-alb-${Environment}'
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4
      Subnets:
        - !ImportValue 'aws-infra-public-subnet-id'  # Public subnet from aws-infra
        - !ImportValue 'aws-infra-private-subnet-1-id'  # Second subnet for ALB requirement
      SecurityGroups:
        - !ImportValue 'aws-infra-alb-sg-id'  # Use aws-infra ALB security group

  # ALB Security Group is imported from aws-infra

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub 'crow-detector-tg-${Environment}'
      Port: 3000
      Protocol: HTTP
      TargetType: ip
      VpcId: !ImportValue 'aws-infra-vpc-id'
      HealthCheckPath: /health
      HealthCheckPort: 3000
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 30
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '30'

  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref CertificateArn

  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

Outputs:
  LoadBalancerDNS:
    Description: DNS name of the load balancer
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: !Sub 'crow-detector-alb-${Environment}-DNS'

  TargetGroupArn:
    Description: ARN of the target group
    Value: !Ref TargetGroup
    Export:
      Name: !Sub 'crow-detector-tg-${Environment}-Arn'

  LoadBalancerArn:
    Description: ARN of the load balancer
    Value: !Ref ApplicationLoadBalancer
    Export:
      Name: !Sub 'crow-detector-alb-${Environment}-Arn'


