AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC Routing Setup - Associate existing route table with subnets'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC where the resources will be deployed.

  ExistingRouteTableId:
    Type: String
    Default: 'rtb-c15c57ba'
    Description: The ID of the existing route table that already has the NAT route.

  PublicSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the public subnet where the NAT instance is deployed (subnet-e22085a8).

Resources:
  # Associate the existing route table (with NAT route) with the 3 private subnets
  # This will make ECS tasks route through the NAT instance
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: subnet-02ce757a  # us-west-2b
      RouteTableId: !Ref ExistingRouteTableId

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: subnet-2655df7b  # us-west-2c
      RouteTableId: !Ref ExistingRouteTableId

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: subnet-badfdd91  # us-west-2d
      RouteTableId: !Ref ExistingRouteTableId

  # ADD THE MISSING NAT ROUTE to the main route table
  # This is what ECS tasks need to reach AWS services
  MainRouteTableNATRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ExistingRouteTableId
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !ImportValue crow-detector-nat-instance

  # Create a new route table specifically for the public subnet (NAT instance subnet)
  # This will route to the existing Internet Gateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: 'crow-detector-public-rt'

  # Route to existing Internet Gateway for public subnet
  PublicRouteToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: igw-bd20b0c4  # Your existing Internet Gateway

  # Associate public route table with NAT instance subnet
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetId
      RouteTableId: !Ref PublicRouteTable

Outputs:
  PublicRouteTableId:
    Description: ID of the new public route table
    Value: !Ref PublicRouteTable
    Export:
      Name: 'crow-detector-public-rt'

  PrivateSubnetAssociations:
    Description: IDs of the private subnet route table associations
    Value: !Join [',', [!Ref PrivateSubnet1RouteTableAssociation, !Ref PrivateSubnet2RouteTableAssociation, !Ref PrivateSubnet3RouteTableAssociation]]
