name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment (dev/prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    name: Deploy to ECS Fargate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Lint Code
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test:cov

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          retention-days: 7

      - name: Coverage Threshold Check
        run: |
          if [[ $(grep "Statements" coverage/lcov-report/index.html | awk '{print $4}' | tr -d '%') -lt 80 ]]; then
            echo "Code coverage is below threshold. Please update test coverage and try again."
            exit 1
          fi

      - name: Build Application
        run: npm run build

      - name: Set Up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Log Into AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          docker build -t crow-detector-server:$GITHUB_SHA .
          docker tag crow-detector-server:$GITHUB_SHA ${{ steps.login-ecr.outputs.registry }}/crow-detector-server-${{ github.event.inputs.environment }}:$GITHUB_SHA

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/crow-detector-server-${{ github.event.inputs.environment }}:$GITHUB_SHA
          echo "CONTAINER_IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/crow-detector-server-${{ github.event.inputs.environment }}:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Deploy ECS Task Definition
        run: |
          aws cloudformation deploy \
            --stack-name crow-detector-task-stack-${{ github.event.inputs.environment }} \
            --template-file cloudformation/crow-detector-ecs-task.yaml \
            --parameter-overrides ContainerImage=${{ env.CONTAINER_IMAGE_URI }} Environment=${{ github.event.inputs.environment }} \
            --capabilities CAPABILITY_NAMED_IAM \
            --region us-west-2

